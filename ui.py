# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/sergey/design_saves/my_vk_design.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os


data = {}

def get_comands():
    '''тоже самое что и в том файле'''
    f = open('./settings.json')
    global data
    for i in f:
        data[i[0 : i.index("'") - 2]] = i[i.index("'") + 1 : ].replace('\n', '')[ : -1]

get_comands()

def write_file(file):
    '''тоже самое'''
    f = open('./settings.json', 'r')
    content = []
    for i in f:
        content.append(i)
    f.close()
    f = open('./settings.json', 'w')
    for i in content:
        if i.startswith('last_file: '):
            f.write('last_file: ' + file)
        else:
            f.write(i)
    


def file_search(cwd):
        '''тоже самое'''
        try:
            results = [str(i)[ str(i).index("'")  + 1 : -2 ] for i in os.scandir(cwd)]
        except:
            print("it's an error")
            return []

        files = [ [], [] ]

        for i in results:
            if os.path.isfile(cwd) == False and cwd.endswith("/") == False:
                if os.path.isdir(cwd + "/" + i):
                    files[0].append(i)
                else:
                    files[1].append(i)
            else:
                if os.path.isdir(cwd + "/" + i):
                    files[0].append(i)
                else:
                    files[1].append(i)
        return files


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        '''это просто дизайн'''
        #создаем окошко
        #----------------------------------------------------------------- функция только для создателя (ну либо пишите свой адрес картинки)
        Dialog.setWindowIcon(QtGui.QIcon(os.getcwd() + '/explorer_.ico'))
        #----------------------------------------------------------------- конец
        Dialog.setObjectName("not_Dialog")
        Dialog.title = "qwe"
        Dialog.resize(1920, 1080)

        self.terminal = QtWidgets.QTextEdit(Dialog)
        self.terminal.setObjectName('terminal')
        self.terminal.setGeometry(QtCore.QRect(1305, 469, 540, 579))

        #создаем первую строку ввода
        self.LineEdit = QtWidgets.QLineEdit(Dialog)
        self.LineEdit.setObjectName("LineEdit")
        self.LineEdit.setGeometry(61, 1, 1000, 30)
        self.LineEdit.setFont(QtGui.QFont("Droid Sans Mono", 11, QtGui.QFont.Bold))
        self.LineEdit.setText('адрес')
        # self.LineEdit.setStyleSheet('background-color:#333333')

        #создаем виджет который отображает результаты
        self.listWidget = QtWidgets.QListWidget(Dialog)
        self.listWidget.setGeometry(QtCore.QRect(0, 35, 1300, 1014))
        self.listWidget.setObjectName("listWidget")
        self.listWidget.addItem('чтобы увидеть файлы в нужной папке введите путь к папке')
        # self.listWidget.setStyleSheet('background-color:#333333')

        self.menu = QtWidgets.QMenuBar(self.listWidget)

        #создаем вторую строку ввода
        self.scripts_LineEdit = QtWidgets.QLineEdit(Dialog)
        self.scripts_LineEdit.setGeometry(QtCore.QRect(1305, 35, 443, 30))
        self.scripts_LineEdit.setObjectName("scripts_Lineedit")
        # self.scripts_LineEdit.setStyleSheet('background-color:#333333')

        self.finder_LineEdit = QtWidgets.QLineEdit(Dialog)
        self.finder_LineEdit.setGeometry(QtCore.QRect(1750, 35, 100, 30))
        self.finder_LineEdit.setObjectName('finder_LineEdit')
        # self.finder_LineEdit.setStyleSheet('background-color:#111111')

        #создаем второй виджет который отображает результаты после поиска из строки
        self.scripts_listWidget = QtWidgets.QListWidget(Dialog)
        self.scripts_listWidget.setObjectName("listwidget_scripts_list")
        self.scripts_listWidget.setGeometry(QtCore.QRect(1305, 69, 540, 400))
        self.scripts_listWidget.addItem('для поиска .py файлов введите в строку сверху путь')
        self.scripts_listWidget.addItem('нажмите Enter чтобы запустить файл с расширением .py')
        # self.scripts_listWidget.setStyleSheet('background-color:#333333')

        '''ну а тут я заполняю список содержимым последней открытой папки'''

        if data['last_file'] != '':
            results = file_search(data['last_file'])
            self.LineEdit.setText(data['last_file'])
            self.listWidget.addItem(f'|>	{len(results[0])}				папок---------------------------------------------------------------------------------')
            if len(results[0]) != 0:
                if len(results[0]) >= 16:
                    self.listWidget.addItems(results[0][ : 16] + ['d---->'])
                else:
                    self.listWidget.addItems(results[0])
            if len(results[1]) != 0:
                if len(results[1]) >= 16:
                    self.listWidget.addItems(results[1][0 : 16] + ['f---->'])
                else:
                    self.listWidget.addItems(results[1])
        elif os.name == 'posix':
            results = file_search('/')
            self.LineEdit.setText('/')
            self.listWidget.addItem(f'|>	{len(results[0])}				папок---------------------------------------------------------------------------------')
            if len(results[0]) != 0:
                if len(results[0]) >= 16:
                    self.listWidget.addItems(results[0][ : 16] + ['d---->'])
                else:
                    self.listWidget.addItems(results[0])
            if len(results[1]) != 0:
                if len(results[1]) >= 16:
                    self.listWidget.addItems(results[1][0 : 16] + ['f---->'])
                else:
                    self.listWidget.addItems(results[1])
        elif os.name == 'nt':
            results = file_search('C:\ '.replace(' ', ''))
            self.LineEdit.setText('C:\ '.replace(' ', ''))
            self.listWidget.addItem(f'|>	{len(results[0])}				папок---------------------------------------------------------------------------------')
            if len(results[0]) != 0:
                if len(results[0]) >= 16:
                    self.listWidget.addItems(results[0][ : 16] + ['d---->'])
                else:
                    self.listWidget.addItems(results[0])
            if len(results[1]) != 0:
                if len(results[1]) >= 16:
                    self.listWidget.addItems(results[1][0 : 16] + ['f---->'])
                else:
                    self.listWidget.addItems(results[1])



        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "file dispatcher"))
